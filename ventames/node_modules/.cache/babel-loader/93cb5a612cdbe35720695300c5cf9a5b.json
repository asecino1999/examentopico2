{"ast":null,"code":"var _jsxFileName = \"/home/gerald/ingeSofware/topico/vier_27_sep/ventames/src/App.tsx\";\nimport React from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\nimport * as ventas from './ventas';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    var separar_ventas4 = /([a-zA-Z]*)(:)?(\\\t|\\ )*(s|S)\\/.(\\ )*[0-9]+(\\,[0-9]*)*(\\.[0-9]*)*/;\n    separar_ventas4 = new RegExp(separar_ventas4, \"\\g\");\n    var cadenas = ventas.texto.match(separar_ventas4) || [];\n    var meses = [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"];\n    var valores = meses.map(element => {\n      return {\n        mes: element,\n        val: 0\n      };\n    });\n    var separar_numero = /[0-9]+(\\,[0-9]*)*(\\.[0-9]*)*/;\n    valores.forEach(ele => {\n      var delMes = cadenas.map(element => {\n        if (element.indexOf(ele.mes)) {\n          var numeroNul = element.match(separar_numero);\n          var numero;\n\n          if (numeroNul) {\n            numero = numeroNul[0];\n          } else numero = \"0\";\n\n          return parseFloat(numero);\n        } else {\n          return 0;\n        }\n      });\n      ele.val = delMes.reduce((a, b) => a + b);\n    });\n    this.state = {\n      valores: ventas.texto,\n      separar_ventas: separar_numero\n    };\n  }\n\n  render() {\n    console.log(this.state.separar_ventas);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.separar_ventas);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gerald/ingeSofware/topico/vier_27_sep/ventames/src/App.tsx"],"names":["React","ventas","App","Component","constructor","props","separar_ventas4","RegExp","cadenas","texto","match","meses","valores","map","element","mes","val","separar_numero","forEach","ele","delMes","indexOf","numeroNul","numero","parseFloat","reduce","a","b","state","separar_ventas","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;;AASA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAY;AACnB,UAAMA,KAAN;AACA,QAAIC,eAAsB,GAAC,kEAA3B;AACAA,IAAAA,eAAe,GAAC,IAAIC,MAAJ,CAAWD,eAAX,EAA2B,IAA3B,CAAhB;AAEA,QAAIE,OAAgB,GAAEP,MAAM,CAACQ,KAAP,CAAaC,KAAb,CAAmBJ,eAAnB,KAAsC,EAA5D;AACA,QAAIK,KAAc,GAAE,CACpB,OADoB,EAEpB,SAFoB,EAGpB,OAHoB,EAIpB,OAJoB,EAKpB,MALoB,EAMpB,OANoB,EAOpB,OAPoB,EAQpB,QARoB,EASpB,YAToB,EAUpB,SAVoB,EAWpB,WAXoB,EAYpB,WAZoB,CAApB;AAcA,QAAIC,OAAgB,GAACD,KAAK,CAACE,GAAN,CAAWC,OAAD,IAAoB;AACjD,aAAO;AAACC,QAAAA,GAAG,EAACD,OAAL;AAAaE,QAAAA,GAAG,EAAC;AAAjB,OAAP;AACD,KAFoB,CAArB;AAGA,QAAIC,cAAqB,GAAC,8BAA1B;AACAL,IAAAA,OAAO,CAACM,OAAR,CAAgBC,GAAG,IAAI;AAErB,UAAIC,MAAM,GAACZ,OAAO,CAACK,GAAR,CAAaC,OAAD,IAAoB;AACzC,YAAGA,OAAO,CAACO,OAAR,CAAgBF,GAAG,CAACJ,GAApB,CAAH,EAA4B;AAC5B,cAAIO,SAAS,GAACR,OAAO,CAACJ,KAAR,CAAcO,cAAd,CAAd;AACA,cAAIM,MAAJ;;AACA,cAAGD,SAAH,EAAa;AACXC,YAAAA,MAAM,GAACD,SAAS,CAAC,CAAD,CAAhB;AACD,WAFD,MAGAC,MAAM,GAAC,GAAP;;AAEA,iBAAOC,UAAU,CAACD,MAAD,CAAjB;AAA0B,SAR1B,MAUA;AACE,iBAAO,CAAP;AACD;AACF,OAdU,CAAX;AAeAJ,MAAAA,GAAG,CAACH,GAAJ,GAAQI,MAAM,CAACK,MAAP,CAAc,CAACC,CAAD,EAAGC,CAAH,KAAOD,CAAC,GAACC,CAAvB,CAAR;AACD,KAlBD;AAoBA,SAAKC,KAAL,GAAW;AACThB,MAAAA,OAAO,EAACX,MAAM,CAACQ,KADN;AAEToB,MAAAA,cAAc,EAACZ;AAFN,KAAX;AAMH;;AACDa,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,cAAvB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,KAAKD,KAAL,CAAWC,cADP,CAAP;AAID;;AA1D0C;;AA6D7C,eAAe3B,GAAf","sourcesContent":["import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport * as ventas from './ventas';\ninterface IState {\n  valores:string|string[],\n  separar_ventas:any;\n}\ninterface mesVal{\n  mes:string,\n  val:number\n}\nclass App extends React.Component<{},IState> {\n  constructor(props:any) {\n      super(props);\n      var separar_ventas4:RegExp=/([a-zA-Z]*)(:)?(\\\t|\\ )*(s|S)\\/.(\\ )*[0-9]+(\\,[0-9]*)*(\\.[0-9]*)*/\n      separar_ventas4=new RegExp(separar_ventas4,\"\\g\")\n\n      var cadenas:string[]= ventas.texto.match(separar_ventas4)|| []\n      var meses:string[]= [\n      \"enero\",\n      \"febrero\",\n      \"marzo\",\n      \"abril\",\n      \"mayo\",\n      \"junio\",\n      \"julio\",\n      \"agosto\",\n      \"septiembre\",\n      \"octubre\",\n      \"noviembre\",\n      \"diciembre\",\n      ]\n      var valores:mesVal[]=meses.map((element):mesVal => {\n        return {mes:element,val:0}; \n      });\n      var separar_numero:RegExp=/[0-9]+(\\,[0-9]*)*(\\.[0-9]*)*/\n      valores.forEach(ele => {\n          \n        var delMes=cadenas.map((element):number => {\n          if(element.indexOf(ele.mes)){\n          var numeroNul=element.match(separar_numero)\n          var numero\n          if(numeroNul){\n            numero=numeroNul[0]\n          }else\n          numero=\"0\"\n\n          return parseFloat(numero)}\n          else\n          {\n            return 0\n          }\n        });\n        ele.val=delMes.reduce((a,b)=>a+b)\n      });\n\n      this.state={\n        valores:ventas.texto,\n        separar_ventas:separar_numero\n\n      }\n\n  }\n  render(){\n    console.log(this.state.separar_ventas)\n    return(<div>\n      {this.state.separar_ventas}\n      \n    </div>)\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}